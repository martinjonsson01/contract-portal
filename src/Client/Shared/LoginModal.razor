@using System.ComponentModel.DataAnnotations
@using Blazorise.Extensions
@using Domain.Users
@inject HttpClient _http
@inject IJSRuntime _js
@inject NavigationManager _navigationManager

<div class="modal" id="log-in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <EditForm Model="@_user" OnSubmit="ValidateUser">
                    <div class="mb-3">
                        <div class="d-flex justify-content-between">
                            <label for="username" class="form-label">
                                <h3>Användarnamn</h3>
                            </label>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <InputText id="username" class="form-control" placeholder="Användarnamn" @bind-Value="@_user.Name"/>
                        <InputText id="password" type="password" class="form-control" placeholder="Lösenord" @bind-Value="@_user.Password"/>

                        @if (_logInFailed)
                        {
                            <p class="text-danger">Inloggningen misslyckades </p>
                        }
                    </div>
                    <div class="login-footer">
                        <button type="submit" class="btn btn-primary mb-3 ">Logga in</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    User _user = new (){ Name = "", Password = "", };
    bool _logInFailed = false;

    /// <summary>
    /// Called when the username is changed.
    /// </summary>
    [Parameter]
    public EventCallback<string> OnUserLogInChange { get; set; } = EventCallback<string>.Empty;

    private async Task ValidateUser()
    {
        HttpResponseMessage response = await _http.PostAsJsonAsync("/api/v1/users/validate", _user);
        if (response.IsSuccessStatusCode)
        {
            _logInFailed = false;
            await OnUserLogInChange.InvokeAsync(_user.Name);
            await _js.InvokeVoidAsync("closeModal", "#log-in");
            _navigationManager.NavigateTo("");
        }
        else
        {
            _logInFailed = true;
        }
    }

}
