@typeparam TData
@inject HttpClient _http;

@if (_data is null)
{
    @LoadingIndicator
}
else
{
    <!-- Render child content using the fetched data. -->
    @ChildContent(_data)
}

@code {

    /// <summary>
    /// Where to send a GET-request and fetch data from.
    /// </summary>
    [Parameter, EditorRequired,]
    public string Url { get; set; } = null!;

    /// <summary>
    /// The content to render using the fetched data.
    /// </summary>
    [Parameter, EditorRequired,]
    public RenderFragment<TData> ChildContent { get; set; } = null!;

    /// <summary>
    /// An indicator that is shown while the data is being fetched.
    /// </summary>
    [Parameter,]
    public RenderFragment LoadingIndicator { get; set; } = @<LoadingIndicator />;

    private TData? _data;

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        _data = await _http.GetFromJsonAsync<TData>(Url);
    }
}
