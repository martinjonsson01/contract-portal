@page "/contracts"
@using Domain.Contracts
@using Blazorise.Extensions
@inject HttpClient _http

<SearchBar OnQueryChange="OnQueryChanged"/>

<RecentlyViewed @ref="_recentlyViewed"/>

<FetchData @ref="_dataFetcher"
           TData="IEnumerable<Contract>"
           Url="api/v1/contracts"
           Context="contracts">

    <div class="container-fluid">
        <div class="d-flex flex-wrap justify-content-center">
            @foreach (Contract contract in contracts)
            {
                <ContractCard Contract=@contract OnViewed="OnRecentlyViewed"/>
            }
        </div>
    </div>

</FetchData>

@code {
    private RecentlyViewed _recentlyViewed = null!;

    private FetchData<IEnumerable<Contract>> _dataFetcher = null!;

    private void OnRecentlyViewed(Contract viewedContract)
    {
        _recentlyViewed.AddViewedContract(viewedContract);
    }

    private async Task OnQueryChanged(string query)
    {
        _recentlyViewed.ShowRecentContracts(query.IsNullOrEmpty());
        string urlSafeQuery = Uri.EscapeDataString(query);
        var fetchUrl = $"api/v1/contracts?query={urlSafeQuery}";
        await _dataFetcher.Fetch(fetchUrl);
    }
}
