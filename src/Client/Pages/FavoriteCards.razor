@using Domain.Contracts
@using System.Collections.ObjectModel
@using Newtonsoft.Json
@inject HttpClient _http

<div id="favorite-contracts">
    <h3>Favorite Contracts</h3>
    @if (_favoriteContracts == null)
    {
        <p>
            <em>Laddar...</em>
        </p>
    }
    else
    {
        <div id="favorite-cards-container" class="d-flex flex-row justify-content-around flex-wrap">
            @if (_favoriteContracts.Count > 0)
            {
                @foreach (var contract in _favoriteContracts)
                {
                    <ContractCard Contract=@contract OnFavoriteChange="OnFavoriteChange"></ContractCard>
                }
            }
            else
            {
                <p>
                    <em>Du har inga favorit markerade kontrakt.</em>
                </p>
            }

        </div>
    }
</div>

@code {
    private List<Contract>? _favoriteContracts;

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        _favoriteContracts = await _http.GetFromJsonAsync<List<Contract>>("/api/v1/Contracts/favorites");
    }

    private async Task OnFavoriteChange(Contract contract)
    {
        if (contract.IsFavorite) return;
        _favoriteContracts?.RemoveAll(other => other.Id == contract.Id);
        await InvokeAsync(StateHasChanged);
    }

}
