@using Domain.Users
@inject HttpClient _http

<FetchData @ref="_dataFetcher"
           TData="List<User>"
           Url="/api/v1/users"
           Context="users">

    <div class="list-group">
        @foreach (User user in users)
        {
            <UserListItem User=@user OnUserRemoved="@OnUserRemoved"/>
        }
    </div>

</FetchData>

@code {

    private FetchData<List<User>> _dataFetcher = null!;

    /// <summary>
    /// Adds a user to the list.
    /// </summary>
    /// <param name="user">The user to add.</param>
    public void Add(User user)
    {
        _dataFetcher.Data?.Add(user);
        InvokeAsync(StateHasChanged);
    }

    /// <summary>
    /// Removes a user from the list.
    /// </summary>
    /// <param name="user">The user to remove.</param>
    private void OnUserRemoved(User user)
    {
    // Using null forgiving operator because because _contracts
    // can not be null when remove button is pressed.
        _dataFetcher.Data!.Remove(user);
        InvokeAsync(StateHasChanged);
    }
}
