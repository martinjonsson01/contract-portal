@using Domain.Users
@inject HttpClient _http

<h4>Skapa användare</h4>

<EditForm Model="@_user" OnSubmit="HandleSubmit">
    <div class="mb-3">
        <label for="user-name" class="form-label">Användarnamn</label>
        <InputText id="user-name" class="form-control" placeholder="Användarens namn" @bind-Value="@_user.Name"/>
    </div>
    <div class="mb-3">
        <label for="user-company" class="form-label">Företag</label>
        <InputText id="user-company" class="form-control" placeholder="Företagets namn" @bind-Value="@_user.Company"/>
    </div>
    <div class="mb-3">
        <label for="" class="form-label">Senaste betaldatum</label>
        <InputDate id="user-latest-payment-date" class="form-control" @bind-Value="_user.LatestPaymentDate"/>
    </div>

    <button type="submit" class="btn btn-primary mb-3">Skapa användare</button>
</EditForm>

@code {
    private User _user = CreateUnspecifiedUser();

    private static User CreateUnspecifiedUser()
    {
        return new User
        {
            Name = string.Empty,
            Company = string.Empty,
        };
    }

    private async Task HandleSubmit()
    {
        await AddUser();
    }

    /// <summary>
    /// Called when a user has been added successfully.
    /// </summary>
    [Parameter]
    public EventCallback<User> UserAdded { get; set; } = EventCallback<User>.Empty;

    private async Task AddUser()
    {
        HttpResponseMessage response = await _http.PostAsJsonAsync("/api/v1/users", _user);
        if (response.IsSuccessStatusCode)
        {
            await UserAdded.InvokeAsync(_user);
            _user = CreateUnspecifiedUser();
        }
    }
}
