@using Domain.Contracts
@using Newtonsoft.Json
@inject HttpClient _http
@inject ISessionService _session

<div id="favorite-contracts" style="padding-top: 30px;">
    <h3>Favoriter</h3>
    <FetchData @ref="_dataFetcher"
               TData="List<Contract>"
               Url=@($"api/v1/users/{_session.Username}/favorites")
               Context="contracts">
        @{
            var contractsList = contracts.ToList();
        }
        @if (contractsList.Any())
        {
            <div id="favorite-cards-container" class="d-flex flex-row justify-content-around flex-wrap">
                @foreach (var contract in contractsList)
                {
                    <ContractCard Contract=@contract OnFavoriteChange="@((args)=> OnFavoriteChange(((Guid, bool))args))"/>
                }
            </div>
        }
        else
        {
            <div id="no-favorites">
                <p >
                    <em>Du har inga favoritmarkerade kontrakt.</em>
                </p>
            </div>
        }
    </FetchData>
</div>

@code {
    private FetchData<List<Contract>> _dataFetcher = null!;

    private async Task OnFavoriteChange((Guid Id, bool IsFavorite)args)
    {
        if (args.IsFavorite) return;
        _dataFetcher.Data?.RemoveAll(other => other.Id == args.Id);
        await InvokeAsync(StateHasChanged);
    }

}
