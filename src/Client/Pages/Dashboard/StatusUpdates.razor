@using Domain.StatusUpdates
@using Blazorise.Extensions
@inject HttpClient _http;

<FetchData TData="StatusUpdate[]"
           Url="api/v1/status-updates"
           Context="statusUpdates">
    <h3 class="text-center fw-bold">Nyheter</h3>
    @if (statusUpdates.IsNullOrEmpty())
    {
        <p>Det finns inga nyheter för tillfället.</p>
    }
    else
    {
        <div class="prodigo-status-list shadow">
            @foreach (StatusUpdate statusUpdate in FilterAlertLevels(statusUpdates))
            {
                <StatusUpdateItem Status="@statusUpdate"/>
            }
        </div>
    }
</FetchData>

@code
{
    /// <summary>
    /// Gets or sets which severities of status updates that should be shown.
    /// </summary>
    [Parameter]
    public IEnumerable<AlertLevel> AlertLevels { get; set; } = new[] { AlertLevel.Information, };

    private IEnumerable<StatusUpdate> FilterAlertLevels(IEnumerable<StatusUpdate> statusUpdates)
    {
        return statusUpdates.Where(update => AlertLevels.Contains(update.Alert))
                            .OrderByDescending(status => status.Timestamp);
    }
}
